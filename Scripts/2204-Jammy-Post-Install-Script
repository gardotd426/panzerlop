#!/bin/bash -e
# Syntax Derived from script Copyright (C) 2019 madaidan under GPL
# Snap disable owed to https://github.com/BryanDollery
# Disable Telementary owed to https://github.com/LamdaLamdaLamda/disable-ubuntu-telemetry
#Thanks the-spyke on Github for the instructions on installing Pipewire on 22.04
# 2022 script panzerlop under GPLv3



if [ "$(dpkg -l | awk '/nano/ {print }'|wc -l)" -ge 1 ]; then
  echo "You need nano installed for this script"
else
 apt-get -y install nano
fi

script_checks() {

# !!!!!!!
# not sure about forcing software updates here without a user prompt, could be bad under some scenarios

 sudo apt-get update

 echo ""
      if ! ps -p 1 | grep systemd &>/dev/null; then
      echo "This script can only be used with systemd."
      exit 1
    fi
echo ""
    if [[ "$(id -u)" -ne 0 ]]; then
      echo "This script needs to be run as root. (sudo)"
      exit 1
    fi

echo ""

}

disable_telementary() {

  read -r -p "Disable ALL Telementary? (y/n) " disable_telementary
	  if [ "${disable_telementary}" = "y" ]; then

# resolving to localhost:
echo "[*] Resolving \"metrics.ubuntu.com\" to localhost"
echo 127.0.0.1 www.metrics.ubuntu.com >>/etc/hosts
echo 127.0.0.1 metrics.ubuntu.com >>/etc/hosts

echo "[*] Resolving \"popcon.ubuntu.com\" to localhost"
echo 127.0.0.1 www.popcon.ubuntu.com >>/etc/hosts
echo 127.0.0.1 popcon.ubuntu.com >>/etc/hosts

# Removing telemetry services:
apt purge -y ubuntu-report popularity-contest apport whoopsie >/dev/null 2>&1

echo ""

  fi
}

disable_snap() {


  read -r -p "Disable and remove Snap? (y/n) " disable_snap
	  if [ "${disable_snap}" = "y" ]; then

echo "Removing snap..."

# Stop the daemon
sudo systemctl stop snapd && sudo systemctl disable snapd

# Uninstall
sudo apt purge -y snapd

# Tidy up dirs
sudo rm -rf /snap /var/snap /var/lib/snapd /var/cache/snapd /usr/lib/snapd ~/snap

# Stop it from being reinstalled by 'mistake' when installing other packages
cat << EOF > no-snap.pref
Package: snapd
Pin: release a=*
Pin-Priority: -10
EOF

sudo mv no-snap.pref /etc/apt/preferences.d/
sudo chown root:root /etc/apt/preferences.d/no-snap.pref


echo ""

  fi
}

fix_appimage() {

  read -r -p "Fix Appimage support? ( libfuse2 ) (y/n) " fix_appimage
	  if [ "${fix_appimage}" = "y" ]; then

sudo apt install libfuse2

echo ""

  fi
}

install_flatpak() {

  read -r -p "Install Flatpak backend and add flathub? (y/n) " install_flatpak
	  if [ "${install_flatpak}" = "y" ]; then

sudo apt update

sudo apt install flatpak -y

sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

echo ""

  fi
}

install_firefox() {

  read -r -p "Install the Firefox Flatpak? (y/n) " install_firefox
	  if [ "${install_firefox}" = "y" ]; then

flatpak install flathub org.mozilla.firefox

echo " To run Firefox from Terminal type the following: "
echo " "
echo " flatpak run org.mozilla.firefox "
echo " "
echo " Restart session if Firefox doesn't appear in Applications menu "
echo " "

  fi
}

install_pipewire() {

  read -r -p "Install PipeWire Audio Server and let it control Bluetooth audio? (y/n) [ REQUIRES REBOOT] " install_pipewire
	  if [ "${install_pipewire}" = "y" ]; then

sudo apt install pipewire-pulse
sudo apt install \
  libfdk-aac2 \
  libldacbt-{abr,enc}2 \
  libopenaptx0

  sudo apt install \
  libspa-0.2-bluetooth \
  pipewire-audio-client-libraries \
  pipewire-media-session- \
  wireplumber

  sudo cp /usr/share/doc/pipewire/examples/alsa.conf.d/99-pipewire-default.conf /etc/alsa/conf.d/

  sudo apt remove pulseaudio-module-bluetooth

echo ""

  fi
}

grub_probe_enable() {

  read -r -p "Enable GRUB to probe for other OS and update it's settings? (y/n) " grub_probe_enable
	  if [ "${grub_probe_enable}" = "y" ]; then


sudo echo 'GRUB_DISABLE_OS_PROBER=false' | sudo tee -a /etc/default/grub

sudo update-grub

  fi
}


ending() {
  ## Reboot
  echo ""
   echo " https://github.com/panzerlop/"
   echo ""
   echo ""
   echo ""
  read -r -p "Reboot to apply all the changes? (y/n) " reboot
  if [ "${reboot}" = "y" ]; then
    reboot

  fi
}

echo ""
echo "22.04 Jelly Jammyfish easy Post-Install guided customisation script"
echo ""
cat << "EOF"
               .-.
         .-'``(|||)
      ,`\ \    `-`.
     /   \ '``-.   `
   .-.  ,       `___:
  (:::) :        ___
   `-`  `       ,   :
     \   / ,..-`   ,
      `./ /    .-.`
         `-..-(   )
               `-`
EOF

echo ""
echo ""
echo "By using this script you accept any break in system function/ damage / blabla is your own fault..."
echo "So if you also agree with that you may..."
echo ""
read -r -p "...start the script? (y/n) " start
if [ "${start}" = "n" ]; then

echo ""

  exit 1
elif ! [ "${start}" = "y" ]; then
  echo ""
  echo "You did not enter a correct character."
  echo ""
  echo "Be careful when reading through this script..."
  exit 1
fi

disable_telementary
disable_snap
fix_appimage
install_flatpak
install_firefox
install_pipewire
grub_probe_enable
ending
